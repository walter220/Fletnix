#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Deze code is gegenereerd met een hulpprogramma.
//     Runtime-versie:4.0.30319.42000
//
//     Als u wijzigingen aanbrengt in dit bestand, kan dit onjuist gedrag veroorzaken wanneer
//     de code wordt gegenereerd.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Fletnix
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class Fletnix : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insert__EFMigrationsHistory(__EFMigrationsHistory instance);
    partial void Update__EFMigrationsHistory(__EFMigrationsHistory instance);
    partial void Delete__EFMigrationsHistory(__EFMigrationsHistory instance);
    partial void InsertAspNetRoleClaims(AspNetRoleClaims instance);
    partial void UpdateAspNetRoleClaims(AspNetRoleClaims instance);
    partial void DeleteAspNetRoleClaims(AspNetRoleClaims instance);
    partial void InsertAspNetRoles(AspNetRoles instance);
    partial void UpdateAspNetRoles(AspNetRoles instance);
    partial void DeleteAspNetRoles(AspNetRoles instance);
    partial void InsertAspNetUserClaims(AspNetUserClaims instance);
    partial void UpdateAspNetUserClaims(AspNetUserClaims instance);
    partial void DeleteAspNetUserClaims(AspNetUserClaims instance);
    partial void InsertAspNetUserLogins(AspNetUserLogins instance);
    partial void UpdateAspNetUserLogins(AspNetUserLogins instance);
    partial void DeleteAspNetUserLogins(AspNetUserLogins instance);
    partial void InsertAspNetUserRoles(AspNetUserRoles instance);
    partial void UpdateAspNetUserRoles(AspNetUserRoles instance);
    partial void DeleteAspNetUserRoles(AspNetUserRoles instance);
    partial void InsertAspNetUsers(AspNetUsers instance);
    partial void UpdateAspNetUsers(AspNetUsers instance);
    partial void DeleteAspNetUsers(AspNetUsers instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertCustomerFeedback(CustomerFeedback instance);
    partial void UpdateCustomerFeedback(CustomerFeedback instance);
    partial void DeleteCustomerFeedback(CustomerFeedback instance);
    partial void InsertGenre(Genre instance);
    partial void UpdateGenre(Genre instance);
    partial void DeleteGenre(Genre instance);
    partial void InsertMovie(Movie instance);
    partial void UpdateMovie(Movie instance);
    partial void DeleteMovie(Movie instance);
    partial void InsertMovie_Cast(Movie_Cast instance);
    partial void UpdateMovie_Cast(Movie_Cast instance);
    partial void DeleteMovie_Cast(Movie_Cast instance);
    partial void InsertMovie_Director(Movie_Director instance);
    partial void UpdateMovie_Director(Movie_Director instance);
    partial void DeleteMovie_Director(Movie_Director instance);
    partial void InsertMovie_Genre(Movie_Genre instance);
    partial void UpdateMovie_Genre(Movie_Genre instance);
    partial void DeleteMovie_Genre(Movie_Genre instance);
    partial void InsertMovieAwards(MovieAwards instance);
    partial void UpdateMovieAwards(MovieAwards instance);
    partial void DeleteMovieAwards(MovieAwards instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    partial void InsertWatchhistory(Watchhistory instance);
    partial void UpdateWatchhistory(Watchhistory instance);
    partial void DeleteWatchhistory(Watchhistory instance);
    #endregion
		
		public Fletnix(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Fletnix(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Fletnix(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Fletnix(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<@__EFMigrationsHistory> @__EFMigrationsHistory
		{
			get
			{
				return this.GetTable<@__EFMigrationsHistory>();
			}
		}
		
		public System.Data.Linq.Table<AspNetRoleClaims> AspNetRoleClaims
		{
			get
			{
				return this.GetTable<AspNetRoleClaims>();
			}
		}
		
		public System.Data.Linq.Table<AspNetRoles> AspNetRoles
		{
			get
			{
				return this.GetTable<AspNetRoles>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserClaims> AspNetUserClaims
		{
			get
			{
				return this.GetTable<AspNetUserClaims>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserLogins> AspNetUserLogins
		{
			get
			{
				return this.GetTable<AspNetUserLogins>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserRoles> AspNetUserRoles
		{
			get
			{
				return this.GetTable<AspNetUserRoles>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUsers> AspNetUsers
		{
			get
			{
				return this.GetTable<AspNetUsers>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customer
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<CustomerFeedback> CustomerFeedback
		{
			get
			{
				return this.GetTable<CustomerFeedback>();
			}
		}
		
		public System.Data.Linq.Table<Sys_Database_firewall_rules> Sys_Database_firewall_rules
		{
			get
			{
				return this.GetTable<Sys_Database_firewall_rules>();
			}
		}
		
		public System.Data.Linq.Table<Genre> Genre
		{
			get
			{
				return this.GetTable<Genre>();
			}
		}
		
		public System.Data.Linq.Table<Movie> Movie
		{
			get
			{
				return this.GetTable<Movie>();
			}
		}
		
		public System.Data.Linq.Table<Movie_Cast> Movie_Cast
		{
			get
			{
				return this.GetTable<Movie_Cast>();
			}
		}
		
		public System.Data.Linq.Table<Movie_Director> Movie_Director
		{
			get
			{
				return this.GetTable<Movie_Director>();
			}
		}
		
		public System.Data.Linq.Table<Movie_Genre> Movie_Genre
		{
			get
			{
				return this.GetTable<Movie_Genre>();
			}
		}
		
		public System.Data.Linq.Table<MovieAwards> MovieAwards
		{
			get
			{
				return this.GetTable<MovieAwards>();
			}
		}
		
		public System.Data.Linq.Table<Person> Person
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		public System.Data.Linq.Table<Watchhistory> Watchhistory
		{
			get
			{
				return this.GetTable<Watchhistory>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fnCheckWatchDate", IsComposable=true)]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")]
		public System.Nullable<bool> FnCheckWatchDate([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string customer_mail_address, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> watch_date)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), customer_mail_address, watch_date).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SaveTranExample")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int SaveTranExample()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.__EFMigrationsHistory")]
	public partial class @__EFMigrationsHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MigrationId;
		
		private string _ProductVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMigrationIdChanging(string value);
    partial void OnMigrationIdChanged();
    partial void OnProductVersionChanging(string value);
    partial void OnProductVersionChanged();
    #endregion
		
		public @__EFMigrationsHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MigrationId", DbType="NVarChar(150) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MigrationId
		{
			get
			{
				return this._MigrationId;
			}
			set
			{
				if ((this._MigrationId != value))
				{
					this.OnMigrationIdChanging(value);
					this.SendPropertyChanging();
					this._MigrationId = value;
					this.SendPropertyChanged("MigrationId");
					this.OnMigrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductVersion", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string ProductVersion
		{
			get
			{
				return this._ProductVersion;
			}
			set
			{
				if ((this._ProductVersion != value))
				{
					this.OnProductVersionChanging(value);
					this.SendPropertyChanging();
					this._ProductVersion = value;
					this.SendPropertyChanged("ProductVersion");
					this.OnProductVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetRoleClaims")]
	public partial class AspNetRoleClaims : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ClaimType;
		
		private string _ClaimValue;
		
		private string _RoleId;
		
		private EntityRef<AspNetRoles> _AspNetRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnClaimTypeChanging(string value);
    partial void OnClaimTypeChanged();
    partial void OnClaimValueChanging(string value);
    partial void OnClaimValueChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    #endregion
		
		public AspNetRoleClaims()
		{
			this._AspNetRoles = default(EntityRef<AspNetRoles>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimType", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ClaimType
		{
			get
			{
				return this._ClaimType;
			}
			set
			{
				if ((this._ClaimType != value))
				{
					this.OnClaimTypeChanging(value);
					this.SendPropertyChanging();
					this._ClaimType = value;
					this.SendPropertyChanged("ClaimType");
					this.OnClaimTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimValue", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ClaimValue
		{
			get
			{
				return this._ClaimValue;
			}
			set
			{
				if ((this._ClaimValue != value))
				{
					this.OnClaimValueChanging(value);
					this.SendPropertyChanging();
					this._ClaimValue = value;
					this.SendPropertyChanged("ClaimValue");
					this.OnClaimValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(450) NOT NULL", CanBeNull=false)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._AspNetRoles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_IdentityRoleClaim<string>_IdentityRole_RoleId", Storage="_AspNetRoles", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public AspNetRoles AspNetRoles
		{
			get
			{
				return this._AspNetRoles.Entity;
			}
			set
			{
				AspNetRoles previousValue = this._AspNetRoles.Entity;
				if (((previousValue != value) 
							|| (this._AspNetRoles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetRoles.Entity = null;
						previousValue.AspNetRoleClaims.Remove(this);
					}
					this._AspNetRoles.Entity = value;
					if ((value != null))
					{
						value.AspNetRoleClaims.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(string);
					}
					this.SendPropertyChanged("AspNetRoles");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetRoles")]
	public partial class AspNetRoles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _ConcurrencyStamp;
		
		private string _Name;
		
		private string _NormalizedName;
		
		private EntitySet<AspNetRoleClaims> _AspNetRoleClaims;
		
		private EntitySet<AspNetUserRoles> _AspNetUserRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnConcurrencyStampChanging(string value);
    partial void OnConcurrencyStampChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNormalizedNameChanging(string value);
    partial void OnNormalizedNameChanged();
    #endregion
		
		public AspNetRoles()
		{
			this._AspNetRoleClaims = new EntitySet<AspNetRoleClaims>(new Action<AspNetRoleClaims>(this.attach_AspNetRoleClaims), new Action<AspNetRoleClaims>(this.detach_AspNetRoleClaims));
			this._AspNetUserRoles = new EntitySet<AspNetUserRoles>(new Action<AspNetUserRoles>(this.attach_AspNetUserRoles), new Action<AspNetUserRoles>(this.detach_AspNetUserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(450) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConcurrencyStamp", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ConcurrencyStamp
		{
			get
			{
				return this._ConcurrencyStamp;
			}
			set
			{
				if ((this._ConcurrencyStamp != value))
				{
					this.OnConcurrencyStampChanging(value);
					this.SendPropertyChanging();
					this._ConcurrencyStamp = value;
					this.SendPropertyChanged("ConcurrencyStamp");
					this.OnConcurrencyStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalizedName", DbType="NVarChar(256)")]
		public string NormalizedName
		{
			get
			{
				return this._NormalizedName;
			}
			set
			{
				if ((this._NormalizedName != value))
				{
					this.OnNormalizedNameChanging(value);
					this.SendPropertyChanging();
					this._NormalizedName = value;
					this.SendPropertyChanged("NormalizedName");
					this.OnNormalizedNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_IdentityRoleClaim<string>_IdentityRole_RoleId", Storage="_AspNetRoleClaims", ThisKey="Id", OtherKey="RoleId", DeleteRule="CASCADE")]
		public EntitySet<AspNetRoleClaims> AspNetRoleClaims
		{
			get
			{
				return this._AspNetRoleClaims;
			}
			set
			{
				this._AspNetRoleClaims.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_IdentityUserRole<string>_IdentityRole_RoleId", Storage="_AspNetUserRoles", ThisKey="Id", OtherKey="RoleId", DeleteRule="CASCADE")]
		public EntitySet<AspNetUserRoles> AspNetUserRoles
		{
			get
			{
				return this._AspNetUserRoles;
			}
			set
			{
				this._AspNetUserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspNetRoleClaims(AspNetRoleClaims entity)
		{
			this.SendPropertyChanging();
			entity.AspNetRoles = this;
		}
		
		private void detach_AspNetRoleClaims(AspNetRoleClaims entity)
		{
			this.SendPropertyChanging();
			entity.AspNetRoles = null;
		}
		
		private void attach_AspNetUserRoles(AspNetUserRoles entity)
		{
			this.SendPropertyChanging();
			entity.AspNetRoles = this;
		}
		
		private void detach_AspNetUserRoles(AspNetUserRoles entity)
		{
			this.SendPropertyChanging();
			entity.AspNetRoles = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserClaims")]
	public partial class AspNetUserClaims : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ClaimType;
		
		private string _ClaimValue;
		
		private string _UserId;
		
		private EntityRef<AspNetUsers> _AspNetUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnClaimTypeChanging(string value);
    partial void OnClaimTypeChanged();
    partial void OnClaimValueChanging(string value);
    partial void OnClaimValueChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    #endregion
		
		public AspNetUserClaims()
		{
			this._AspNetUsers = default(EntityRef<AspNetUsers>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimType", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ClaimType
		{
			get
			{
				return this._ClaimType;
			}
			set
			{
				if ((this._ClaimType != value))
				{
					this.OnClaimTypeChanging(value);
					this.SendPropertyChanging();
					this._ClaimType = value;
					this.SendPropertyChanged("ClaimType");
					this.OnClaimTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimValue", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ClaimValue
		{
			get
			{
				return this._ClaimValue;
			}
			set
			{
				if ((this._ClaimValue != value))
				{
					this.OnClaimValueChanging(value);
					this.SendPropertyChanging();
					this._ClaimValue = value;
					this.SendPropertyChanged("ClaimValue");
					this.OnClaimValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(450) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUsers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_IdentityUserClaim<string>_FletnixUser_UserId", Storage="_AspNetUsers", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public AspNetUsers AspNetUsers
		{
			get
			{
				return this._AspNetUsers.Entity;
			}
			set
			{
				AspNetUsers previousValue = this._AspNetUsers.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUsers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUsers.Entity = null;
						previousValue.AspNetUserClaims.Remove(this);
					}
					this._AspNetUsers.Entity = value;
					if ((value != null))
					{
						value.AspNetUserClaims.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUsers");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserLogins")]
	public partial class AspNetUserLogins : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LoginProvider;
		
		private string _ProviderKey;
		
		private string _ProviderDisplayName;
		
		private string _UserId;
		
		private EntityRef<AspNetUsers> _AspNetUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginProviderChanging(string value);
    partial void OnLoginProviderChanged();
    partial void OnProviderKeyChanging(string value);
    partial void OnProviderKeyChanged();
    partial void OnProviderDisplayNameChanging(string value);
    partial void OnProviderDisplayNameChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    #endregion
		
		public AspNetUserLogins()
		{
			this._AspNetUsers = default(EntityRef<AspNetUsers>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginProvider", DbType="NVarChar(450) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LoginProvider
		{
			get
			{
				return this._LoginProvider;
			}
			set
			{
				if ((this._LoginProvider != value))
				{
					this.OnLoginProviderChanging(value);
					this.SendPropertyChanging();
					this._LoginProvider = value;
					this.SendPropertyChanged("LoginProvider");
					this.OnLoginProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderKey", DbType="NVarChar(450) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProviderKey
		{
			get
			{
				return this._ProviderKey;
			}
			set
			{
				if ((this._ProviderKey != value))
				{
					this.OnProviderKeyChanging(value);
					this.SendPropertyChanging();
					this._ProviderKey = value;
					this.SendPropertyChanged("ProviderKey");
					this.OnProviderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderDisplayName", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ProviderDisplayName
		{
			get
			{
				return this._ProviderDisplayName;
			}
			set
			{
				if ((this._ProviderDisplayName != value))
				{
					this.OnProviderDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._ProviderDisplayName = value;
					this.SendPropertyChanged("ProviderDisplayName");
					this.OnProviderDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(450) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUsers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_IdentityUserLogin<string>_FletnixUser_UserId", Storage="_AspNetUsers", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public AspNetUsers AspNetUsers
		{
			get
			{
				return this._AspNetUsers.Entity;
			}
			set
			{
				AspNetUsers previousValue = this._AspNetUsers.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUsers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUsers.Entity = null;
						previousValue.AspNetUserLogins.Remove(this);
					}
					this._AspNetUsers.Entity = value;
					if ((value != null))
					{
						value.AspNetUserLogins.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUsers");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserRoles")]
	public partial class AspNetUserRoles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserId;
		
		private string _RoleId;
		
		private EntityRef<AspNetUsers> _AspNetUsers;
		
		private EntityRef<AspNetRoles> _AspNetRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    #endregion
		
		public AspNetUserRoles()
		{
			this._AspNetUsers = default(EntityRef<AspNetUsers>);
			this._AspNetRoles = default(EntityRef<AspNetRoles>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(450) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUsers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(450) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._AspNetRoles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_IdentityUserRole<string>_FletnixUser_UserId", Storage="_AspNetUsers", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public AspNetUsers AspNetUsers
		{
			get
			{
				return this._AspNetUsers.Entity;
			}
			set
			{
				AspNetUsers previousValue = this._AspNetUsers.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUsers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUsers.Entity = null;
						previousValue.AspNetUserRoles.Remove(this);
					}
					this._AspNetUsers.Entity = value;
					if ((value != null))
					{
						value.AspNetUserRoles.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUsers");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_IdentityUserRole<string>_IdentityRole_RoleId", Storage="_AspNetRoles", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public AspNetRoles AspNetRoles
		{
			get
			{
				return this._AspNetRoles.Entity;
			}
			set
			{
				AspNetRoles previousValue = this._AspNetRoles.Entity;
				if (((previousValue != value) 
							|| (this._AspNetRoles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetRoles.Entity = null;
						previousValue.AspNetUserRoles.Remove(this);
					}
					this._AspNetRoles.Entity = value;
					if ((value != null))
					{
						value.AspNetUserRoles.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(string);
					}
					this.SendPropertyChanged("AspNetRoles");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUsers")]
	public partial class AspNetUsers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private int _AccessFailedCount;
		
		private string _ConcurrencyStamp;
		
		private string _Email;
		
		private bool _EmailConfirmed;
		
		private System.DateTime _FirsteTime;
		
		private bool _LockoutEnabled;
		
		private System.Nullable<System.DateTimeOffset> _LockoutEnd;
		
		private string _NormalizedEmail;
		
		private string _NormalizedUserName;
		
		private string _PasswordHash;
		
		private string _PhoneNumber;
		
		private bool _PhoneNumberConfirmed;
		
		private string _SecurityStamp;
		
		private bool _TwoFactorEnabled;
		
		private string _UserName;
		
		private EntitySet<AspNetUserClaims> _AspNetUserClaims;
		
		private EntitySet<AspNetUserLogins> _AspNetUserLogins;
		
		private EntitySet<AspNetUserRoles> _AspNetUserRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnAccessFailedCountChanging(int value);
    partial void OnAccessFailedCountChanged();
    partial void OnConcurrencyStampChanging(string value);
    partial void OnConcurrencyStampChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEmailConfirmedChanging(bool value);
    partial void OnEmailConfirmedChanged();
    partial void OnFirsteTimeChanging(System.DateTime value);
    partial void OnFirsteTimeChanged();
    partial void OnLockoutEnabledChanging(bool value);
    partial void OnLockoutEnabledChanged();
    partial void OnLockoutEndChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnLockoutEndChanged();
    partial void OnNormalizedEmailChanging(string value);
    partial void OnNormalizedEmailChanged();
    partial void OnNormalizedUserNameChanging(string value);
    partial void OnNormalizedUserNameChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnPhoneNumberConfirmedChanging(bool value);
    partial void OnPhoneNumberConfirmedChanged();
    partial void OnSecurityStampChanging(string value);
    partial void OnSecurityStampChanged();
    partial void OnTwoFactorEnabledChanging(bool value);
    partial void OnTwoFactorEnabledChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public AspNetUsers()
		{
			this._AspNetUserClaims = new EntitySet<AspNetUserClaims>(new Action<AspNetUserClaims>(this.attach_AspNetUserClaims), new Action<AspNetUserClaims>(this.detach_AspNetUserClaims));
			this._AspNetUserLogins = new EntitySet<AspNetUserLogins>(new Action<AspNetUserLogins>(this.attach_AspNetUserLogins), new Action<AspNetUserLogins>(this.detach_AspNetUserLogins));
			this._AspNetUserRoles = new EntitySet<AspNetUserRoles>(new Action<AspNetUserRoles>(this.attach_AspNetUserRoles), new Action<AspNetUserRoles>(this.detach_AspNetUserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(450) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessFailedCount", DbType="Int NOT NULL")]
		public int AccessFailedCount
		{
			get
			{
				return this._AccessFailedCount;
			}
			set
			{
				if ((this._AccessFailedCount != value))
				{
					this.OnAccessFailedCountChanging(value);
					this.SendPropertyChanging();
					this._AccessFailedCount = value;
					this.SendPropertyChanged("AccessFailedCount");
					this.OnAccessFailedCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConcurrencyStamp", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ConcurrencyStamp
		{
			get
			{
				return this._ConcurrencyStamp;
			}
			set
			{
				if ((this._ConcurrencyStamp != value))
				{
					this.OnConcurrencyStampChanging(value);
					this.SendPropertyChanging();
					this._ConcurrencyStamp = value;
					this.SendPropertyChanged("ConcurrencyStamp");
					this.OnConcurrencyStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailConfirmed", DbType="Bit NOT NULL")]
		public bool EmailConfirmed
		{
			get
			{
				return this._EmailConfirmed;
			}
			set
			{
				if ((this._EmailConfirmed != value))
				{
					this.OnEmailConfirmedChanging(value);
					this.SendPropertyChanging();
					this._EmailConfirmed = value;
					this.SendPropertyChanged("EmailConfirmed");
					this.OnEmailConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirsteTime", DbType="DateTime2(7) NOT NULL")]
		public System.DateTime FirsteTime
		{
			get
			{
				return this._FirsteTime;
			}
			set
			{
				if ((this._FirsteTime != value))
				{
					this.OnFirsteTimeChanging(value);
					this.SendPropertyChanging();
					this._FirsteTime = value;
					this.SendPropertyChanged("FirsteTime");
					this.OnFirsteTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEnabled", DbType="Bit NOT NULL")]
		public bool LockoutEnabled
		{
			get
			{
				return this._LockoutEnabled;
			}
			set
			{
				if ((this._LockoutEnabled != value))
				{
					this.OnLockoutEnabledChanging(value);
					this.SendPropertyChanging();
					this._LockoutEnabled = value;
					this.SendPropertyChanged("LockoutEnabled");
					this.OnLockoutEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEnd", DbType="DateTimeOffset(7)")]
		public System.Nullable<System.DateTimeOffset> LockoutEnd
		{
			get
			{
				return this._LockoutEnd;
			}
			set
			{
				if ((this._LockoutEnd != value))
				{
					this.OnLockoutEndChanging(value);
					this.SendPropertyChanging();
					this._LockoutEnd = value;
					this.SendPropertyChanged("LockoutEnd");
					this.OnLockoutEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalizedEmail", DbType="NVarChar(256)")]
		public string NormalizedEmail
		{
			get
			{
				return this._NormalizedEmail;
			}
			set
			{
				if ((this._NormalizedEmail != value))
				{
					this.OnNormalizedEmailChanging(value);
					this.SendPropertyChanging();
					this._NormalizedEmail = value;
					this.SendPropertyChanged("NormalizedEmail");
					this.OnNormalizedEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalizedUserName", DbType="NVarChar(256)")]
		public string NormalizedUserName
		{
			get
			{
				return this._NormalizedUserName;
			}
			set
			{
				if ((this._NormalizedUserName != value))
				{
					this.OnNormalizedUserNameChanging(value);
					this.SendPropertyChanging();
					this._NormalizedUserName = value;
					this.SendPropertyChanged("NormalizedUserName");
					this.OnNormalizedUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumberConfirmed", DbType="Bit NOT NULL")]
		public bool PhoneNumberConfirmed
		{
			get
			{
				return this._PhoneNumberConfirmed;
			}
			set
			{
				if ((this._PhoneNumberConfirmed != value))
				{
					this.OnPhoneNumberConfirmedChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberConfirmed = value;
					this.SendPropertyChanged("PhoneNumberConfirmed");
					this.OnPhoneNumberConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityStamp", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string SecurityStamp
		{
			get
			{
				return this._SecurityStamp;
			}
			set
			{
				if ((this._SecurityStamp != value))
				{
					this.OnSecurityStampChanging(value);
					this.SendPropertyChanging();
					this._SecurityStamp = value;
					this.SendPropertyChanged("SecurityStamp");
					this.OnSecurityStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwoFactorEnabled", DbType="Bit NOT NULL")]
		public bool TwoFactorEnabled
		{
			get
			{
				return this._TwoFactorEnabled;
			}
			set
			{
				if ((this._TwoFactorEnabled != value))
				{
					this.OnTwoFactorEnabledChanging(value);
					this.SendPropertyChanging();
					this._TwoFactorEnabled = value;
					this.SendPropertyChanged("TwoFactorEnabled");
					this.OnTwoFactorEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_IdentityUserClaim<string>_FletnixUser_UserId", Storage="_AspNetUserClaims", ThisKey="Id", OtherKey="UserId", DeleteRule="CASCADE")]
		public EntitySet<AspNetUserClaims> AspNetUserClaims
		{
			get
			{
				return this._AspNetUserClaims;
			}
			set
			{
				this._AspNetUserClaims.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_IdentityUserLogin<string>_FletnixUser_UserId", Storage="_AspNetUserLogins", ThisKey="Id", OtherKey="UserId", DeleteRule="CASCADE")]
		public EntitySet<AspNetUserLogins> AspNetUserLogins
		{
			get
			{
				return this._AspNetUserLogins;
			}
			set
			{
				this._AspNetUserLogins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_IdentityUserRole<string>_FletnixUser_UserId", Storage="_AspNetUserRoles", ThisKey="Id", OtherKey="UserId", DeleteRule="CASCADE")]
		public EntitySet<AspNetUserRoles> AspNetUserRoles
		{
			get
			{
				return this._AspNetUserRoles;
			}
			set
			{
				this._AspNetUserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspNetUserClaims(AspNetUserClaims entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUsers = this;
		}
		
		private void detach_AspNetUserClaims(AspNetUserClaims entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUsers = null;
		}
		
		private void attach_AspNetUserLogins(AspNetUserLogins entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUsers = this;
		}
		
		private void detach_AspNetUserLogins(AspNetUserLogins entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUsers = null;
		}
		
		private void attach_AspNetUserRoles(AspNetUserRoles entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUsers = this;
		}
		
		private void detach_AspNetUserRoles(AspNetUserRoles entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUsers = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Customer_mail_address;
		
		private string _Name;
		
		private string _Paypal_account;
		
		private System.DateTime _Subscription_start;
		
		private System.Nullable<System.DateTime> _Subscription_end;
		
		private string _Password;
		
		private EntitySet<Watchhistory> _Watchhistory;
		
		private EntitySet<CustomerFeedback> _CustomerFeedback;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomer_mail_addressChanging(string value);
    partial void OnCustomer_mail_addressChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPaypal_accountChanging(string value);
    partial void OnPaypal_accountChanged();
    partial void OnSubscription_startChanging(System.DateTime value);
    partial void OnSubscription_startChanged();
    partial void OnSubscription_endChanging(System.Nullable<System.DateTime> value);
    partial void OnSubscription_endChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public Customer()
		{
			this._Watchhistory = new EntitySet<Watchhistory>(new Action<Watchhistory>(this.attach_Watchhistory), new Action<Watchhistory>(this.detach_Watchhistory));
			this._CustomerFeedback = new EntitySet<CustomerFeedback>(new Action<CustomerFeedback>(this.attach_CustomerFeedback), new Action<CustomerFeedback>(this.detach_CustomerFeedback));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="customer_mail_address", Storage="_Customer_mail_address", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Customer_mail_address
		{
			get
			{
				return this._Customer_mail_address;
			}
			set
			{
				if ((this._Customer_mail_address != value))
				{
					this.OnCustomer_mail_addressChanging(value);
					this.SendPropertyChanging();
					this._Customer_mail_address = value;
					this.SendPropertyChanged("Customer_mail_address");
					this.OnCustomer_mail_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="name", Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="paypal_account", Storage="_Paypal_account", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Paypal_account
		{
			get
			{
				return this._Paypal_account;
			}
			set
			{
				if ((this._Paypal_account != value))
				{
					this.OnPaypal_accountChanging(value);
					this.SendPropertyChanging();
					this._Paypal_account = value;
					this.SendPropertyChanged("Paypal_account");
					this.OnPaypal_accountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="subscription_start", Storage="_Subscription_start", DbType="Date NOT NULL")]
		public System.DateTime Subscription_start
		{
			get
			{
				return this._Subscription_start;
			}
			set
			{
				if ((this._Subscription_start != value))
				{
					this.OnSubscription_startChanging(value);
					this.SendPropertyChanging();
					this._Subscription_start = value;
					this.SendPropertyChanged("Subscription_start");
					this.OnSubscription_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="subscription_end", Storage="_Subscription_end", DbType="Date")]
		public System.Nullable<System.DateTime> Subscription_end
		{
			get
			{
				return this._Subscription_end;
			}
			set
			{
				if ((this._Subscription_end != value))
				{
					this.OnSubscription_endChanging(value);
					this.SendPropertyChanging();
					this._Subscription_end = value;
					this.SendPropertyChanged("Subscription_end");
					this.OnSubscription_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="password", Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_customer", Storage="_Watchhistory", ThisKey="Customer_mail_address", OtherKey="Customer_mail_address", DeleteRule="NO ACTION")]
		public EntitySet<Watchhistory> Watchhistory
		{
			get
			{
				return this._Watchhistory;
			}
			set
			{
				this._Watchhistory.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CustomerFeedback_Customer", Storage="_CustomerFeedback", ThisKey="Customer_mail_address", OtherKey="Customer_mail_address", DeleteRule="NO ACTION")]
		public EntitySet<CustomerFeedback> CustomerFeedback
		{
			get
			{
				return this._CustomerFeedback;
			}
			set
			{
				this._CustomerFeedback.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Watchhistory(Watchhistory entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Watchhistory(Watchhistory entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_CustomerFeedback(CustomerFeedback entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_CustomerFeedback(CustomerFeedback entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerFeedback")]
	public partial class CustomerFeedback : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Movie_id;
		
		private string _Customer_mail_address;
		
		private System.DateTime _Feedback_date;
		
		private string _Comments;
		
		private int _Rating;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Movie> _Movie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMovie_idChanging(int value);
    partial void OnMovie_idChanged();
    partial void OnCustomer_mail_addressChanging(string value);
    partial void OnCustomer_mail_addressChanged();
    partial void OnFeedback_dateChanging(System.DateTime value);
    partial void OnFeedback_dateChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnRatingChanging(int value);
    partial void OnRatingChanged();
    #endregion
		
		public CustomerFeedback()
		{
			this._Customer = default(EntityRef<Customer>);
			this._Movie = default(EntityRef<Movie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="movie_id", Storage="_Movie_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Movie_id
		{
			get
			{
				return this._Movie_id;
			}
			set
			{
				if ((this._Movie_id != value))
				{
					this.OnMovie_idChanging(value);
					this.SendPropertyChanging();
					this._Movie_id = value;
					this.SendPropertyChanged("Movie_id");
					this.OnMovie_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="customer_mail_address", Storage="_Customer_mail_address", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Customer_mail_address
		{
			get
			{
				return this._Customer_mail_address;
			}
			set
			{
				if ((this._Customer_mail_address != value))
				{
					this.OnCustomer_mail_addressChanging(value);
					this.SendPropertyChanging();
					this._Customer_mail_address = value;
					this.SendPropertyChanged("Customer_mail_address");
					this.OnCustomer_mail_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="feedback_date", Storage="_Feedback_date", DbType="Date NOT NULL")]
		public System.DateTime Feedback_date
		{
			get
			{
				return this._Feedback_date;
			}
			set
			{
				if ((this._Feedback_date != value))
				{
					this.OnFeedback_dateChanging(value);
					this.SendPropertyChanging();
					this._Feedback_date = value;
					this.SendPropertyChanged("Feedback_date");
					this.OnFeedback_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="comments", Storage="_Comments", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="rating", Storage="_Rating", DbType="Int NOT NULL")]
		public int Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CustomerFeedback_Customer", Storage="_Customer", ThisKey="Customer_mail_address", OtherKey="Customer_mail_address", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.CustomerFeedback.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.CustomerFeedback.Add(this);
						this._Customer_mail_address = value.Customer_mail_address;
					}
					else
					{
						this._Customer_mail_address = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CustomerFeedback_Movie", Storage="_Movie", ThisKey="Movie_id", OtherKey="Movie_id", IsForeignKey=true)]
		public Movie Movie
		{
			get
			{
				return this._Movie.Entity;
			}
			set
			{
				Movie previousValue = this._Movie.Entity;
				if (((previousValue != value) 
							|| (this._Movie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Movie.Entity = null;
						previousValue.CustomerFeedback.Remove(this);
					}
					this._Movie.Entity = value;
					if ((value != null))
					{
						value.CustomerFeedback.Add(this);
						this._Movie_id = value.Movie_id;
					}
					else
					{
						this._Movie_id = default(int);
					}
					this.SendPropertyChanged("Movie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="sys.database_firewall_rules")]
	public partial class Sys_Database_firewall_rules
	{
		
		private int _Id;
		
		private string _Name;
		
		private string _Start_ip_address;
		
		private string _End_ip_address;
		
		private System.DateTime _Create_date;
		
		private System.DateTime _Modify_date;
		
		public Sys_Database_firewall_rules()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id", Storage="_Id", DbType="Int NOT NULL IDENTITY")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="name", Storage="_Name", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="start_ip_address", Storage="_Start_ip_address", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string Start_ip_address
		{
			get
			{
				return this._Start_ip_address;
			}
			set
			{
				if ((this._Start_ip_address != value))
				{
					this._Start_ip_address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="end_ip_address", Storage="_End_ip_address", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string End_ip_address
		{
			get
			{
				return this._End_ip_address;
			}
			set
			{
				if ((this._End_ip_address != value))
				{
					this._End_ip_address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="create_date", Storage="_Create_date", DbType="DateTime NOT NULL")]
		public System.DateTime Create_date
		{
			get
			{
				return this._Create_date;
			}
			set
			{
				if ((this._Create_date != value))
				{
					this._Create_date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="modify_date", Storage="_Modify_date", DbType="DateTime NOT NULL")]
		public System.DateTime Modify_date
		{
			get
			{
				return this._Modify_date;
			}
			set
			{
				if ((this._Modify_date != value))
				{
					this._Modify_date = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Genre")]
	public partial class Genre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Genre_name;
		
		private string _Description;
		
		private EntitySet<Movie_Genre> _Movie_Genre;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGenre_nameChanging(string value);
    partial void OnGenre_nameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Genre()
		{
			this._Movie_Genre = new EntitySet<Movie_Genre>(new Action<Movie_Genre>(this.attach_Movie_Genre), new Action<Movie_Genre>(this.detach_Movie_Genre));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="genre_name", Storage="_Genre_name", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Genre_name
		{
			get
			{
				return this._Genre_name;
			}
			set
			{
				if ((this._Genre_name != value))
				{
					this.OnGenre_nameChanging(value);
					this.SendPropertyChanging();
					this._Genre_name = value;
					this.SendPropertyChanged("Genre_name");
					this.OnGenre_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="description", Storage="_Description", DbType="VarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_genre", Storage="_Movie_Genre", ThisKey="Genre_name", OtherKey="Genre_name", DeleteRule="CASCADE")]
		public EntitySet<Movie_Genre> Movie_Genre
		{
			get
			{
				return this._Movie_Genre;
			}
			set
			{
				this._Movie_Genre.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Movie_Genre(Movie_Genre entity)
		{
			this.SendPropertyChanging();
			entity.Genre = this;
		}
		
		private void detach_Movie_Genre(Movie_Genre entity)
		{
			this.SendPropertyChanging();
			entity.Genre = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Movie")]
	public partial class Movie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Movie_id;
		
		private string _Title;
		
		private System.Nullable<int> _Duration;
		
		private string _Description;
		
		private System.Nullable<int> _Publication_year;
		
		private System.Data.Linq.Binary _Cover_image;
		
		private System.Nullable<int> _Previous_part;
		
		private decimal _Price;
		
		private string _URL;
		
		private System.Nullable<int> _Minimum_age;
		
		private EntitySet<CustomerFeedback> _CustomerFeedback;
		
		private EntitySet<Movie_Director> _Movie_Director;
		
		private EntitySet<MovieAwards> _MovieAwards;
		
		private EntityRef<Movie> _Previous_partMovie;
		
		private EntitySet<Movie> _Movie_;
		
		private EntitySet<Movie_Cast> _Movie_Cast;
		
		private EntitySet<Movie_Genre> _Movie_Genre;
		
		private EntitySet<Watchhistory> _Watchhistory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMovie_idChanging(int value);
    partial void OnMovie_idChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDurationChanging(System.Nullable<int> value);
    partial void OnDurationChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPublication_yearChanging(System.Nullable<int> value);
    partial void OnPublication_yearChanged();
    partial void OnCover_imageChanging(System.Data.Linq.Binary value);
    partial void OnCover_imageChanged();
    partial void OnPrevious_partChanging(System.Nullable<int> value);
    partial void OnPrevious_partChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnMinimum_ageChanging(System.Nullable<int> value);
    partial void OnMinimum_ageChanged();
    #endregion
		
		public Movie()
		{
			this._CustomerFeedback = new EntitySet<CustomerFeedback>(new Action<CustomerFeedback>(this.attach_CustomerFeedback), new Action<CustomerFeedback>(this.detach_CustomerFeedback));
			this._Movie_Director = new EntitySet<Movie_Director>(new Action<Movie_Director>(this.attach_Movie_Director), new Action<Movie_Director>(this.detach_Movie_Director));
			this._MovieAwards = new EntitySet<MovieAwards>(new Action<MovieAwards>(this.attach_MovieAwards), new Action<MovieAwards>(this.detach_MovieAwards));
			this._Previous_partMovie = default(EntityRef<Movie>);
			this._Movie_ = new EntitySet<Movie>(new Action<Movie>(this.attach_Movie_), new Action<Movie>(this.detach_Movie_));
			this._Movie_Cast = new EntitySet<Movie_Cast>(new Action<Movie_Cast>(this.attach_Movie_Cast), new Action<Movie_Cast>(this.detach_Movie_Cast));
			this._Movie_Genre = new EntitySet<Movie_Genre>(new Action<Movie_Genre>(this.attach_Movie_Genre), new Action<Movie_Genre>(this.detach_Movie_Genre));
			this._Watchhistory = new EntitySet<Watchhistory>(new Action<Watchhistory>(this.attach_Watchhistory), new Action<Watchhistory>(this.detach_Watchhistory));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="movie_id", Storage="_Movie_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Movie_id
		{
			get
			{
				return this._Movie_id;
			}
			set
			{
				if ((this._Movie_id != value))
				{
					this.OnMovie_idChanging(value);
					this.SendPropertyChanging();
					this._Movie_id = value;
					this.SendPropertyChanged("Movie_id");
					this.OnMovie_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="title", Storage="_Title", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="duration", Storage="_Duration", DbType="Int")]
		public System.Nullable<int> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="description", Storage="_Description", DbType="VarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="publication_year", Storage="_Publication_year", DbType="Int")]
		public System.Nullable<int> Publication_year
		{
			get
			{
				return this._Publication_year;
			}
			set
			{
				if ((this._Publication_year != value))
				{
					this.OnPublication_yearChanging(value);
					this.SendPropertyChanging();
					this._Publication_year = value;
					this.SendPropertyChanged("Publication_year");
					this.OnPublication_yearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="cover_image", Storage="_Cover_image", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Cover_image
		{
			get
			{
				return this._Cover_image;
			}
			set
			{
				if ((this._Cover_image != value))
				{
					this.OnCover_imageChanging(value);
					this.SendPropertyChanging();
					this._Cover_image = value;
					this.SendPropertyChanged("Cover_image");
					this.OnCover_imageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="previous_part", Storage="_Previous_part", DbType="Int")]
		public System.Nullable<int> Previous_part
		{
			get
			{
				return this._Previous_part;
			}
			set
			{
				if ((this._Previous_part != value))
				{
					this.OnPrevious_partChanging(value);
					this.SendPropertyChanging();
					this._Previous_part = value;
					this.SendPropertyChanged("Previous_part");
					this.OnPrevious_partChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="price", Storage="_Price", DbType="Decimal(5,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="VarChar(255)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="minimum_age", Storage="_Minimum_age", DbType="Int")]
		public System.Nullable<int> Minimum_age
		{
			get
			{
				return this._Minimum_age;
			}
			set
			{
				if ((this._Minimum_age != value))
				{
					this.OnMinimum_ageChanging(value);
					this.SendPropertyChanging();
					this._Minimum_age = value;
					this.SendPropertyChanged("Minimum_age");
					this.OnMinimum_ageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CustomerFeedback_Movie", Storage="_CustomerFeedback", ThisKey="Movie_id", OtherKey="Movie_id", DeleteRule="NO ACTION")]
		public EntitySet<CustomerFeedback> CustomerFeedback
		{
			get
			{
				return this._CustomerFeedback;
			}
			set
			{
				this._CustomerFeedback.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_movie_id", Storage="_Movie_Director", ThisKey="Movie_id", OtherKey="Movie_id", DeleteRule="CASCADE")]
		public EntitySet<Movie_Director> Movie_Director
		{
			get
			{
				return this._Movie_Director;
			}
			set
			{
				this._Movie_Director.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_MovieAwards_Movie", Storage="_MovieAwards", ThisKey="Movie_id", OtherKey="Movie_id", DeleteRule="NO ACTION")]
		public EntitySet<MovieAwards> MovieAwards
		{
			get
			{
				return this._MovieAwards;
			}
			set
			{
				this._MovieAwards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_previous_part", Storage="_Previous_partMovie", ThisKey="Previous_part", OtherKey="Movie_id", IsForeignKey=true)]
		public Movie Previous_partMovie
		{
			get
			{
				return this._Previous_partMovie.Entity;
			}
			set
			{
				Movie previousValue = this._Previous_partMovie.Entity;
				if (((previousValue != value) 
							|| (this._Previous_partMovie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Previous_partMovie.Entity = null;
						previousValue.Movie_.Remove(this);
					}
					this._Previous_partMovie.Entity = value;
					if ((value != null))
					{
						value.Movie_.Add(this);
						this._Previous_part = value.Movie_id;
					}
					else
					{
						this._Previous_part = default(Nullable<int>);
					}
					this.SendPropertyChanged("Previous_partMovie");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_previous_part", Storage="_Movie_", ThisKey="Movie_id", OtherKey="Previous_part", DeleteRule="NO ACTION")]
		public EntitySet<Movie> Movie_
		{
			get
			{
				return this._Movie_;
			}
			set
			{
				this._Movie_.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK2_movie_id", Storage="_Movie_Cast", ThisKey="Movie_id", OtherKey="Movie_id", DeleteRule="CASCADE")]
		public EntitySet<Movie_Cast> Movie_Cast
		{
			get
			{
				return this._Movie_Cast;
			}
			set
			{
				this._Movie_Cast.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK3_movie_id", Storage="_Movie_Genre", ThisKey="Movie_id", OtherKey="Movie_id", DeleteRule="CASCADE")]
		public EntitySet<Movie_Genre> Movie_Genre
		{
			get
			{
				return this._Movie_Genre;
			}
			set
			{
				this._Movie_Genre.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK4_movie_id", Storage="_Watchhistory", ThisKey="Movie_id", OtherKey="Movie_id", DeleteRule="NO ACTION")]
		public EntitySet<Watchhistory> Watchhistory
		{
			get
			{
				return this._Watchhistory;
			}
			set
			{
				this._Watchhistory.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerFeedback(CustomerFeedback entity)
		{
			this.SendPropertyChanging();
			entity.Movie = this;
		}
		
		private void detach_CustomerFeedback(CustomerFeedback entity)
		{
			this.SendPropertyChanging();
			entity.Movie = null;
		}
		
		private void attach_Movie_Director(Movie_Director entity)
		{
			this.SendPropertyChanging();
			entity.Movie = this;
		}
		
		private void detach_Movie_Director(Movie_Director entity)
		{
			this.SendPropertyChanging();
			entity.Movie = null;
		}
		
		private void attach_MovieAwards(MovieAwards entity)
		{
			this.SendPropertyChanging();
			entity.Movie = this;
		}
		
		private void detach_MovieAwards(MovieAwards entity)
		{
			this.SendPropertyChanging();
			entity.Movie = null;
		}
		
		private void attach_Movie_(Movie entity)
		{
			this.SendPropertyChanging();
			entity.Previous_partMovie = this;
		}
		
		private void detach_Movie_(Movie entity)
		{
			this.SendPropertyChanging();
			entity.Previous_partMovie = null;
		}
		
		private void attach_Movie_Cast(Movie_Cast entity)
		{
			this.SendPropertyChanging();
			entity.Movie = this;
		}
		
		private void detach_Movie_Cast(Movie_Cast entity)
		{
			this.SendPropertyChanging();
			entity.Movie = null;
		}
		
		private void attach_Movie_Genre(Movie_Genre entity)
		{
			this.SendPropertyChanging();
			entity.Movie = this;
		}
		
		private void detach_Movie_Genre(Movie_Genre entity)
		{
			this.SendPropertyChanging();
			entity.Movie = null;
		}
		
		private void attach_Watchhistory(Watchhistory entity)
		{
			this.SendPropertyChanging();
			entity.Movie = this;
		}
		
		private void detach_Watchhistory(Watchhistory entity)
		{
			this.SendPropertyChanging();
			entity.Movie = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Movie_Cast")]
	public partial class Movie_Cast : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Movie_id;
		
		private int _Person_id;
		
		private string _Role;
		
		private EntityRef<Movie> _Movie;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMovie_idChanging(int value);
    partial void OnMovie_idChanged();
    partial void OnPerson_idChanging(int value);
    partial void OnPerson_idChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    #endregion
		
		public Movie_Cast()
		{
			this._Movie = default(EntityRef<Movie>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="movie_id", Storage="_Movie_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Movie_id
		{
			get
			{
				return this._Movie_id;
			}
			set
			{
				if ((this._Movie_id != value))
				{
					this.OnMovie_idChanging(value);
					this.SendPropertyChanging();
					this._Movie_id = value;
					this.SendPropertyChanged("Movie_id");
					this.OnMovie_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="person_id", Storage="_Person_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Person_id
		{
			get
			{
				return this._Person_id;
			}
			set
			{
				if ((this._Person_id != value))
				{
					this.OnPerson_idChanging(value);
					this.SendPropertyChanging();
					this._Person_id = value;
					this.SendPropertyChanged("Person_id");
					this.OnPerson_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="role", Storage="_Role", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK2_movie_id", Storage="_Movie", ThisKey="Movie_id", OtherKey="Movie_id", IsForeignKey=true, DeleteOnNull=true)]
		public Movie Movie
		{
			get
			{
				return this._Movie.Entity;
			}
			set
			{
				Movie previousValue = this._Movie.Entity;
				if (((previousValue != value) 
							|| (this._Movie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Movie.Entity = null;
						previousValue.Movie_Cast.Remove(this);
					}
					this._Movie.Entity = value;
					if ((value != null))
					{
						value.Movie_Cast.Add(this);
						this._Movie_id = value.Movie_id;
					}
					else
					{
						this._Movie_id = default(int);
					}
					this.SendPropertyChanged("Movie");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK2_person_id", Storage="_Person", ThisKey="Person_id", OtherKey="Person_id", IsForeignKey=true, DeleteOnNull=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Movie_Cast.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Movie_Cast.Add(this);
						this._Person_id = value.Person_id;
					}
					else
					{
						this._Person_id = default(int);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Movie_Director")]
	public partial class Movie_Director : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Movie_id;
		
		private int _Person_id;
		
		private EntityRef<Movie> _Movie;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMovie_idChanging(int value);
    partial void OnMovie_idChanged();
    partial void OnPerson_idChanging(int value);
    partial void OnPerson_idChanged();
    #endregion
		
		public Movie_Director()
		{
			this._Movie = default(EntityRef<Movie>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="movie_id", Storage="_Movie_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Movie_id
		{
			get
			{
				return this._Movie_id;
			}
			set
			{
				if ((this._Movie_id != value))
				{
					this.OnMovie_idChanging(value);
					this.SendPropertyChanging();
					this._Movie_id = value;
					this.SendPropertyChanged("Movie_id");
					this.OnMovie_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="person_id", Storage="_Person_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Person_id
		{
			get
			{
				return this._Person_id;
			}
			set
			{
				if ((this._Person_id != value))
				{
					this.OnPerson_idChanging(value);
					this.SendPropertyChanging();
					this._Person_id = value;
					this.SendPropertyChanged("Person_id");
					this.OnPerson_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_movie_id", Storage="_Movie", ThisKey="Movie_id", OtherKey="Movie_id", IsForeignKey=true, DeleteOnNull=true)]
		public Movie Movie
		{
			get
			{
				return this._Movie.Entity;
			}
			set
			{
				Movie previousValue = this._Movie.Entity;
				if (((previousValue != value) 
							|| (this._Movie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Movie.Entity = null;
						previousValue.Movie_Director.Remove(this);
					}
					this._Movie.Entity = value;
					if ((value != null))
					{
						value.Movie_Director.Add(this);
						this._Movie_id = value.Movie_id;
					}
					else
					{
						this._Movie_id = default(int);
					}
					this.SendPropertyChanged("Movie");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_person_id", Storage="_Person", ThisKey="Person_id", OtherKey="Person_id", IsForeignKey=true, DeleteOnNull=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Movie_Director.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Movie_Director.Add(this);
						this._Person_id = value.Person_id;
					}
					else
					{
						this._Person_id = default(int);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Movie_Genre")]
	public partial class Movie_Genre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Movie_id;
		
		private string _Genre_name;
		
		private EntityRef<Genre> _Genre;
		
		private EntityRef<Movie> _Movie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMovie_idChanging(int value);
    partial void OnMovie_idChanged();
    partial void OnGenre_nameChanging(string value);
    partial void OnGenre_nameChanged();
    #endregion
		
		public Movie_Genre()
		{
			this._Genre = default(EntityRef<Genre>);
			this._Movie = default(EntityRef<Movie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="movie_id", Storage="_Movie_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Movie_id
		{
			get
			{
				return this._Movie_id;
			}
			set
			{
				if ((this._Movie_id != value))
				{
					this.OnMovie_idChanging(value);
					this.SendPropertyChanging();
					this._Movie_id = value;
					this.SendPropertyChanged("Movie_id");
					this.OnMovie_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="genre_name", Storage="_Genre_name", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Genre_name
		{
			get
			{
				return this._Genre_name;
			}
			set
			{
				if ((this._Genre_name != value))
				{
					this.OnGenre_nameChanging(value);
					this.SendPropertyChanging();
					this._Genre_name = value;
					this.SendPropertyChanged("Genre_name");
					this.OnGenre_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_genre", Storage="_Genre", ThisKey="Genre_name", OtherKey="Genre_name", IsForeignKey=true, DeleteOnNull=true)]
		public Genre Genre
		{
			get
			{
				return this._Genre.Entity;
			}
			set
			{
				Genre previousValue = this._Genre.Entity;
				if (((previousValue != value) 
							|| (this._Genre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Genre.Entity = null;
						previousValue.Movie_Genre.Remove(this);
					}
					this._Genre.Entity = value;
					if ((value != null))
					{
						value.Movie_Genre.Add(this);
						this._Genre_name = value.Genre_name;
					}
					else
					{
						this._Genre_name = default(string);
					}
					this.SendPropertyChanged("Genre");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK3_movie_id", Storage="_Movie", ThisKey="Movie_id", OtherKey="Movie_id", IsForeignKey=true, DeleteOnNull=true)]
		public Movie Movie
		{
			get
			{
				return this._Movie.Entity;
			}
			set
			{
				Movie previousValue = this._Movie.Entity;
				if (((previousValue != value) 
							|| (this._Movie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Movie.Entity = null;
						previousValue.Movie_Genre.Remove(this);
					}
					this._Movie.Entity = value;
					if ((value != null))
					{
						value.Movie_Genre.Add(this);
						this._Movie_id = value.Movie_id;
					}
					else
					{
						this._Movie_id = default(int);
					}
					this.SendPropertyChanged("Movie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MovieAwards")]
	public partial class MovieAwards : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Movie_id;
		
		private string _Award;
		
		private string _Result;
		
		private string _Number_of_awards;
		
		private EntityRef<Movie> _Movie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMovie_idChanging(int value);
    partial void OnMovie_idChanged();
    partial void OnAwardChanging(string value);
    partial void OnAwardChanged();
    partial void OnResultChanging(string value);
    partial void OnResultChanged();
    partial void OnNumber_of_awardsChanging(string value);
    partial void OnNumber_of_awardsChanged();
    #endregion
		
		public MovieAwards()
		{
			this._Movie = default(EntityRef<Movie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="movie_id", Storage="_Movie_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Movie_id
		{
			get
			{
				return this._Movie_id;
			}
			set
			{
				if ((this._Movie_id != value))
				{
					this.OnMovie_idChanging(value);
					this.SendPropertyChanging();
					this._Movie_id = value;
					this.SendPropertyChanged("Movie_id");
					this.OnMovie_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="award", Storage="_Award", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Award
		{
			get
			{
				return this._Award;
			}
			set
			{
				if ((this._Award != value))
				{
					this.OnAwardChanging(value);
					this.SendPropertyChanging();
					this._Award = value;
					this.SendPropertyChanged("Award");
					this.OnAwardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="result", Storage="_Result", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="number_of_awards", Storage="_Number_of_awards", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Number_of_awards
		{
			get
			{
				return this._Number_of_awards;
			}
			set
			{
				if ((this._Number_of_awards != value))
				{
					this.OnNumber_of_awardsChanging(value);
					this.SendPropertyChanging();
					this._Number_of_awards = value;
					this.SendPropertyChanged("Number_of_awards");
					this.OnNumber_of_awardsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_MovieAwards_Movie", Storage="_Movie", ThisKey="Movie_id", OtherKey="Movie_id", IsForeignKey=true)]
		public Movie Movie
		{
			get
			{
				return this._Movie.Entity;
			}
			set
			{
				Movie previousValue = this._Movie.Entity;
				if (((previousValue != value) 
							|| (this._Movie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Movie.Entity = null;
						previousValue.MovieAwards.Remove(this);
					}
					this._Movie.Entity = value;
					if ((value != null))
					{
						value.MovieAwards.Add(this);
						this._Movie_id = value.Movie_id;
					}
					else
					{
						this._Movie_id = default(int);
					}
					this.SendPropertyChanged("Movie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Person")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Person_id;
		
		private string _Lastname;
		
		private string _Firstname;
		
		private string _Gender;
		
		private EntitySet<Movie_Director> _Movie_Director;
		
		private EntitySet<Movie_Cast> _Movie_Cast;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPerson_idChanging(int value);
    partial void OnPerson_idChanged();
    partial void OnLastnameChanging(string value);
    partial void OnLastnameChanged();
    partial void OnFirstnameChanging(string value);
    partial void OnFirstnameChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    #endregion
		
		public Person()
		{
			this._Movie_Director = new EntitySet<Movie_Director>(new Action<Movie_Director>(this.attach_Movie_Director), new Action<Movie_Director>(this.detach_Movie_Director));
			this._Movie_Cast = new EntitySet<Movie_Cast>(new Action<Movie_Cast>(this.attach_Movie_Cast), new Action<Movie_Cast>(this.detach_Movie_Cast));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="person_id", Storage="_Person_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Person_id
		{
			get
			{
				return this._Person_id;
			}
			set
			{
				if ((this._Person_id != value))
				{
					this.OnPerson_idChanging(value);
					this.SendPropertyChanging();
					this._Person_id = value;
					this.SendPropertyChanged("Person_id");
					this.OnPerson_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="lastname", Storage="_Lastname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this.OnLastnameChanging(value);
					this.SendPropertyChanging();
					this._Lastname = value;
					this.SendPropertyChanged("Lastname");
					this.OnLastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="firstname", Storage="_Firstname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this.OnFirstnameChanging(value);
					this.SendPropertyChanging();
					this._Firstname = value;
					this.SendPropertyChanged("Firstname");
					this.OnFirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="gender", Storage="_Gender", DbType="Char(1)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_person_id", Storage="_Movie_Director", ThisKey="Person_id", OtherKey="Person_id", DeleteRule="CASCADE")]
		public EntitySet<Movie_Director> Movie_Director
		{
			get
			{
				return this._Movie_Director;
			}
			set
			{
				this._Movie_Director.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK2_person_id", Storage="_Movie_Cast", ThisKey="Person_id", OtherKey="Person_id", DeleteRule="CASCADE")]
		public EntitySet<Movie_Cast> Movie_Cast
		{
			get
			{
				return this._Movie_Cast;
			}
			set
			{
				this._Movie_Cast.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Movie_Director(Movie_Director entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Movie_Director(Movie_Director entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_Movie_Cast(Movie_Cast entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Movie_Cast(Movie_Cast entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Watchhistory")]
	public partial class Watchhistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Movie_id;
		
		private string _Customer_mail_address;
		
		private System.DateTime _Watch_date;
		
		private decimal _Price;
		
		private bool _Invoiced;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Movie> _Movie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMovie_idChanging(int value);
    partial void OnMovie_idChanged();
    partial void OnCustomer_mail_addressChanging(string value);
    partial void OnCustomer_mail_addressChanged();
    partial void OnWatch_dateChanging(System.DateTime value);
    partial void OnWatch_dateChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnInvoicedChanging(bool value);
    partial void OnInvoicedChanged();
    #endregion
		
		public Watchhistory()
		{
			this._Customer = default(EntityRef<Customer>);
			this._Movie = default(EntityRef<Movie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="movie_id", Storage="_Movie_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Movie_id
		{
			get
			{
				return this._Movie_id;
			}
			set
			{
				if ((this._Movie_id != value))
				{
					this.OnMovie_idChanging(value);
					this.SendPropertyChanging();
					this._Movie_id = value;
					this.SendPropertyChanged("Movie_id");
					this.OnMovie_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="customer_mail_address", Storage="_Customer_mail_address", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Customer_mail_address
		{
			get
			{
				return this._Customer_mail_address;
			}
			set
			{
				if ((this._Customer_mail_address != value))
				{
					this.OnCustomer_mail_addressChanging(value);
					this.SendPropertyChanging();
					this._Customer_mail_address = value;
					this.SendPropertyChanged("Customer_mail_address");
					this.OnCustomer_mail_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="watch_date", Storage="_Watch_date", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Watch_date
		{
			get
			{
				return this._Watch_date;
			}
			set
			{
				if ((this._Watch_date != value))
				{
					this.OnWatch_dateChanging(value);
					this.SendPropertyChanging();
					this._Watch_date = value;
					this.SendPropertyChanged("Watch_date");
					this.OnWatch_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="price", Storage="_Price", DbType="Decimal(5,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="invoiced", Storage="_Invoiced", DbType="Bit NOT NULL")]
		public bool Invoiced
		{
			get
			{
				return this._Invoiced;
			}
			set
			{
				if ((this._Invoiced != value))
				{
					this.OnInvoicedChanging(value);
					this.SendPropertyChanging();
					this._Invoiced = value;
					this.SendPropertyChanged("Invoiced");
					this.OnInvoicedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_customer", Storage="_Customer", ThisKey="Customer_mail_address", OtherKey="Customer_mail_address", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Watchhistory.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Watchhistory.Add(this);
						this._Customer_mail_address = value.Customer_mail_address;
					}
					else
					{
						this._Customer_mail_address = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK4_movie_id", Storage="_Movie", ThisKey="Movie_id", OtherKey="Movie_id", IsForeignKey=true)]
		public Movie Movie
		{
			get
			{
				return this._Movie.Entity;
			}
			set
			{
				Movie previousValue = this._Movie.Entity;
				if (((previousValue != value) 
							|| (this._Movie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Movie.Entity = null;
						previousValue.Watchhistory.Remove(this);
					}
					this._Movie.Entity = value;
					if ((value != null))
					{
						value.Watchhistory.Add(this);
						this._Movie_id = value.Movie_id;
					}
					else
					{
						this._Movie_id = default(int);
					}
					this.SendPropertyChanged("Movie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
